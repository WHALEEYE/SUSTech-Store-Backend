<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.whaleeye.mapper.GoodTypeMapper">

    <resultMap id="BaseResultMap" type="tech.whaleeye.model.entity.GoodType">
        <!--@Table good_type-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="typeName" column="type_name" jdbcType="VARCHAR"/>
        <result property="sortNo" column="sort_no" jdbcType="INTEGER"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="getGoodTypeById" resultMap="BaseResultMap">
        select id, type_name, sort_no, created_time
        from good_type
        where id = #{typeId}
    </select>

    <select id="getAllGoodTypes" resultMap="BaseResultMap">
        select id, type_name, sort_no, created_time
        from good_type
        order by sort_no
    </select>

    <!--used in background system-->

    <select id="listAllGoodTypesForBack" resultMap="BaseResultMap">
        select id, type_name, sort_no, created_time
        from good_type
        order by sort_no
        limit #{pageSize} offset #{offset}
    </select>

    <select id="countAllGoodTypesForBack" resultType="Integer">
        select count(*)
        from good_type
    </select>

    <select id="moveUp" resultType="Boolean">
        select move_up_type(#{typeId})
    </select>

    <select id="moveDown" resultType="Boolean">
        select move_down_type(#{typeId})
    </select>

    <insert id="createNewType">
        insert into good_type (id, type_name, sort_no, created_time)
        values (default, #{typeName}, default, now())
    </insert>

    <update id="updateTypeName">
        update good_type
        set type_name = #{typeName}
        where id = #{typeId}
    </update>

    <delete id="deleteType">
        delete
        from good_type
        where id = #{typeId}
    </delete>

</mapper>