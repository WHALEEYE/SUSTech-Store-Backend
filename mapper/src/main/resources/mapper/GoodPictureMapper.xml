<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.whaleeye.mapper.GoodPictureMapper">

    <resultMap id="BaseResultMap" type="tech.whaleeye.model.entity.GoodPicture">
        <!--@Table good_picture-->
        <result property="goodId" column="good_id" jdbcType="INTEGER"/>
        <result property="picturePath" column="picture_path" jdbcType="VARCHAR"/>
        <result property="sortNo" column="sort_no" jdbcType="INTEGER"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="getMainPicPathByGoodId" resultType="String">
        select picture_path
        from good_picture
        where good_id = #{goodId}
        order by sort_no
        limit 1
    </select>

    <select id="getPicturesByGoodId" resultMap="BaseResultMap">
        select good_id, picture_path, sort_no, created_time
        from good_picture
        where good_id = #{goodId}
        order by sort_no
    </select>

    <insert id="insertGoodPictures">
        insert into good_picture (good_id, picture_path, sort_no, created_time)
        values
        <foreach collection="goodPictureList" separator="," item="picture">
            (#{goodId}, #{picture.picturePath, jdbcType=VARCHAR}, #{picture.sortNo, jdbcType=INTEGER}, now())
        </foreach>
    </insert>

    <delete id="deletePicturesByGoodId">
        delete
        from good_picture
        where good_id = #{goodId}
    </delete>

</mapper>