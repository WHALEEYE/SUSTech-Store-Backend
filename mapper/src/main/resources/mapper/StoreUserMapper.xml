<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.whaleeye.mapper.StoreUserMapper">

    <resultMap id="BaseResultMap" type="tech.whaleeye.model.entity.StoreUser">
        <!--@Table store_user-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="phoneNumber" column="phone_number" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="cardNumber" column="card_number" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
        <result property="introduction" column="introduction" jdbcType="VARCHAR"/>
        <result property="avatarPath" column="avatar_path" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="BOOLEAN"/>
        <result property="alipayAccount" column="alipay_account" jdbcType="VARCHAR"/>
        <result property="creditScore" column="credit_score" jdbcType="OTHER"/>
        <result property="totalSoldValue" column="total_sold_value" jdbcType="OTHER"/>
        <result property="secondHandNotification" column="second_hand_notification" jdbcType="BOOLEAN"/>
        <result property="agentServiceNotification" column="agent_service_notification" jdbcType="BOOLEAN"/>
        <result property="apiTradeNotification" column="api_trade_notification" jdbcType="BOOLEAN"/>
        <result property="banned" column="banned" jdbcType="BOOLEAN"/>
        <result property="vCode" column="v_code" jdbcType="VARCHAR"/>
        <result property="vCodeExpireTime" column="v_code_expire_time" jdbcType="TIMESTAMP"/>
        <result property="vCodeType" column="v_code_type" jdbcType="INTEGER"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updatedTime" column="updated_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="getStoreUserByPhoneNumber" resultMap="BaseResultMap" parameterType="String">
        select id,
               phone_number,
               nickname,
               card_number,
               password,
               salt,
               introduction,
               avatar_path,
               sex,
               alipay_account,
               credit_score,
               total_sold_value,
               second_hand_notification,
               agent_service_notification,
               api_trade_notification,
               banned,
               v_code,
               v_code_expire_time,
               v_code_type,
               created_time,
               updated_time
        from store_user
        where phone_number = #{phoneNumber}
    </select>

    <select id="getStoreUserByCardNumber" resultMap="BaseResultMap" parameterType="String">
        select id,
               phone_number,
               nickname,
               card_number,
               password,
               salt,
               introduction,
               avatar_path,
               sex,
               alipay_account,
               credit_score,
               total_sold_value,
               second_hand_notification,
               agent_service_notification,
               api_trade_notification,
               banned,
               v_code,
               v_code_expire_time,
               v_code_type,
               created_time,
               updated_time
        from store_user
        where card_number = #{cardNumber}
    </select>

    <select id="getStoreUserById" resultMap="BaseResultMap" parameterType="Integer">
        select id,
               phone_number,
               nickname,
               card_number,
               password,
               salt,
               introduction,
               avatar_path,
               sex,
               alipay_account,
               credit_score,
               total_sold_value,
               second_hand_notification,
               agent_service_notification,
               api_trade_notification,
               banned,
               v_code,
               v_code_expire_time,
               v_code_type,
               created_time,
               updated_time
        from store_user
        where id = #{userId}
    </select>

    <insert id="registerStoreUser" parameterType="String">
        insert into store_user (phone_number)
        values (#{phoneNumber})
    </insert>

    <insert id="followUser">
        insert into follow_relation (followed_id, follower_id, created_time)
        values (#{followedId}, #{followerId}, now())
    </insert>

    <update id="setVCode">
        update store_user
        set v_code             = #{vCode},
            v_code_expire_time = #{vCodeExpireTime},
            v_code_type        = #{vCodeType}
        where phone_number = #{phoneNumber}
          and banned = false
    </update>

    <update id="clearVCode" parameterType="String">
        update store_user
        set v_code             = null,
            v_code_expire_time = null
        where phone_number = #{phoneNumber}
    </update>

    <update id="updatePassword">
        update store_user
        set password = #{password},
        salt = #{salt},
        updated_time = now()
        where id = #{userId}
        and banned = false
        <if test="firstTime == true">
            and password is null
        </if>
    </update>

    <update id="setCardNumber">
        update store_user
        set card_number    = #{cardNumber},
            updated_time   = now()
        where id = #{userId}
          and banned = false
          and card_number is null
    </update>

    <update id="updateIntroduction">
        update store_user
        set introduction = #{introduction},
            updated_time = now()
        where id = #{userId}
          and banned = false
    </update>

    <update id="updateNickname">
        update store_user
        set nickname     = #{nickname},
            updated_time = now()
        where id = #{userId}
          and banned = false
    </update>

    <update id="updateAlipayAccount">
        update store_user
        set alipay_account = #{alipayAccount},
        updated_time = now()
        where id = #{userId}
        and banned = false
        <if test="firstTime == true">
            and alipay_account is null
        </if>
    </update>

    <update id="updateSex">
        update store_user
        set sex          = #{sex},
            updated_time = now()
        where id = #{userId}
          and banned = false
    </update>

    <update id="updateNotifications">
        update store_user
        set second_hand_notification   = #{secondHandNotification},
            agent_service_notification = #{agentServiceNotification},
            api_trade_notification     = #{apiTradeNotification},
            updated_time               = now()
        where id = #{userId}
          and banned = false
    </update>

    <update id="updateAvatar">
        update store_user
        set avatar_path  = #{avatarPath},
            updated_time = now()
        where id = #{userId}
          and banned = false
    </update>

    <delete id="deleteStoreUser">
        select delete_store_user(#{userId}, #{deleteUserId})
    </delete>

</mapper>